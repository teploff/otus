// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calendar.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	ShortDescription     string   `protobuf:"bytes,1,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	Date                 int64    `protobuf:"varint,2,opt,name=date,proto3" json:"date,omitempty"`
	Duration             int64    `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	FullDescription      string   `protobuf:"bytes,4,opt,name=full_description,json=fullDescription,proto3" json:"full_description,omitempty"`
	RemindBefore         int64    `protobuf:"varint,5,opt,name=remind_before,json=remindBefore,proto3" json:"remind_before,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetShortDescription() string {
	if m != nil {
		return m.ShortDescription
	}
	return ""
}

func (m *Event) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *Event) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Event) GetFullDescription() string {
	if m != nil {
		return m.FullDescription
	}
	return ""
}

func (m *Event) GetRemindBefore() int64 {
	if m != nil {
		return m.RemindBefore
	}
	return 0
}

type CreateRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Event                *Event   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{1}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type UpdateEventRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventId              string   `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Event                *Event   `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateEventRequest) Reset()         { *m = UpdateEventRequest{} }
func (m *UpdateEventRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateEventRequest) ProtoMessage()    {}
func (*UpdateEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{2}
}

func (m *UpdateEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEventRequest.Unmarshal(m, b)
}
func (m *UpdateEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEventRequest.Marshal(b, m, deterministic)
}
func (m *UpdateEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEventRequest.Merge(m, src)
}
func (m *UpdateEventRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateEventRequest.Size(m)
}
func (m *UpdateEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEventRequest proto.InternalMessageInfo

func (m *UpdateEventRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UpdateEventRequest) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *UpdateEventRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type DeleteEventRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventId              string   `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEventRequest) Reset()         { *m = DeleteEventRequest{} }
func (m *DeleteEventRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteEventRequest) ProtoMessage()    {}
func (*DeleteEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{3}
}

func (m *DeleteEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEventRequest.Unmarshal(m, b)
}
func (m *DeleteEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEventRequest.Marshal(b, m, deterministic)
}
func (m *DeleteEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEventRequest.Merge(m, src)
}
func (m *DeleteEventRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteEventRequest.Size(m)
}
func (m *DeleteEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEventRequest proto.InternalMessageInfo

func (m *DeleteEventRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DeleteEventRequest) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

type DateRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Date                 int64    `protobuf:"varint,2,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DateRequest) Reset()         { *m = DateRequest{} }
func (m *DateRequest) String() string { return proto.CompactTextString(m) }
func (*DateRequest) ProtoMessage()    {}
func (*DateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{4}
}

func (m *DateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DateRequest.Unmarshal(m, b)
}
func (m *DateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DateRequest.Marshal(b, m, deterministic)
}
func (m *DateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DateRequest.Merge(m, src)
}
func (m *DateRequest) XXX_Size() int {
	return xxx_messageInfo_DateRequest.Size(m)
}
func (m *DateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DateRequest proto.InternalMessageInfo

func (m *DateRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DateRequest) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

type EmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyResponse) Reset()         { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()    {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{5}
}

func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResponse.Unmarshal(m, b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
}
func (m *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(m, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return xxx_messageInfo_EmptyResponse.Size(m)
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

type DbEvent struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortDescription     string   `protobuf:"bytes,2,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	Date                 int64    `protobuf:"varint,3,opt,name=date,proto3" json:"date,omitempty"`
	Duration             int64    `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	FullDescription      string   `protobuf:"bytes,5,opt,name=full_description,json=fullDescription,proto3" json:"full_description,omitempty"`
	RemindBefore         int64    `protobuf:"varint,6,opt,name=remind_before,json=remindBefore,proto3" json:"remind_before,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DbEvent) Reset()         { *m = DbEvent{} }
func (m *DbEvent) String() string { return proto.CompactTextString(m) }
func (*DbEvent) ProtoMessage()    {}
func (*DbEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{6}
}

func (m *DbEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DbEvent.Unmarshal(m, b)
}
func (m *DbEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DbEvent.Marshal(b, m, deterministic)
}
func (m *DbEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbEvent.Merge(m, src)
}
func (m *DbEvent) XXX_Size() int {
	return xxx_messageInfo_DbEvent.Size(m)
}
func (m *DbEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DbEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DbEvent proto.InternalMessageInfo

func (m *DbEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DbEvent) GetShortDescription() string {
	if m != nil {
		return m.ShortDescription
	}
	return ""
}

func (m *DbEvent) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *DbEvent) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *DbEvent) GetFullDescription() string {
	if m != nil {
		return m.FullDescription
	}
	return ""
}

func (m *DbEvent) GetRemindBefore() int64 {
	if m != nil {
		return m.RemindBefore
	}
	return 0
}

type GetEventResponse struct {
	Events               []*DbEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetEventResponse) Reset()         { *m = GetEventResponse{} }
func (m *GetEventResponse) String() string { return proto.CompactTextString(m) }
func (*GetEventResponse) ProtoMessage()    {}
func (*GetEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{7}
}

func (m *GetEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventResponse.Unmarshal(m, b)
}
func (m *GetEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventResponse.Marshal(b, m, deterministic)
}
func (m *GetEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventResponse.Merge(m, src)
}
func (m *GetEventResponse) XXX_Size() int {
	return xxx_messageInfo_GetEventResponse.Size(m)
}
func (m *GetEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventResponse proto.InternalMessageInfo

func (m *GetEventResponse) GetEvents() []*DbEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "pb.Event")
	proto.RegisterType((*CreateRequest)(nil), "pb.CreateRequest")
	proto.RegisterType((*UpdateEventRequest)(nil), "pb.UpdateEventRequest")
	proto.RegisterType((*DeleteEventRequest)(nil), "pb.DeleteEventRequest")
	proto.RegisterType((*DateRequest)(nil), "pb.DateRequest")
	proto.RegisterType((*EmptyResponse)(nil), "pb.EmptyResponse")
	proto.RegisterType((*DbEvent)(nil), "pb.DbEvent")
	proto.RegisterType((*GetEventResponse)(nil), "pb.GetEventResponse")
}

func init() {
	proto.RegisterFile("calendar.proto", fileDescriptor_e3d25d49f056cdb2)
}

var fileDescriptor_e3d25d49f056cdb2 = []byte{
	// 447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xc1, 0x6e, 0x9b, 0x40,
	0x10, 0x86, 0x03, 0x18, 0xec, 0x0c, 0xc5, 0x38, 0xab, 0xaa, 0xa5, 0xb9, 0xd4, 0x22, 0x17, 0x57,
	0x95, 0x7c, 0x70, 0x55, 0xb5, 0xf5, 0xb1, 0x21, 0xa2, 0x39, 0xf4, 0x82, 0x54, 0xf5, 0x68, 0x41,
	0x76, 0xa2, 0xa0, 0x12, 0xa0, 0xcb, 0x52, 0x29, 0xef, 0xd5, 0x67, 0xe8, 0xc3, 0xf4, 0x29, 0xaa,
	0x9d, 0x45, 0x29, 0x6e, 0xb0, 0x62, 0xab, 0x37, 0xf6, 0x1f, 0xfe, 0xd9, 0xfd, 0x67, 0x3f, 0x80,
	0xe9, 0x55, 0x5a, 0x60, 0xc9, 0x53, 0xb1, 0xac, 0x45, 0x25, 0x2b, 0x66, 0xd6, 0x59, 0xf8, 0xd3,
	0x00, 0xfb, 0xe2, 0x07, 0x96, 0x92, 0xbd, 0x86, 0x93, 0xe6, 0xa6, 0x12, 0x72, 0xc3, 0xb1, 0xb9,
	0x12, 0x79, 0x2d, 0xf3, 0xaa, 0x0c, 0x8c, 0xb9, 0xb1, 0x38, 0x4e, 0x66, 0x54, 0x88, 0xfe, 0xea,
	0x8c, 0xc1, 0x88, 0xa7, 0x12, 0x03, 0x73, 0x6e, 0x2c, 0xac, 0x84, 0x9e, 0xd9, 0x29, 0x4c, 0x78,
	0x2b, 0x52, 0xf2, 0x59, 0xa4, 0xdf, 0xaf, 0xd9, 0x2b, 0x98, 0x5d, 0xb7, 0x45, 0xb1, 0xd5, 0x7b,
	0x44, 0xbd, 0x7d, 0xa5, 0xf7, 0x5b, 0x9f, 0x81, 0x27, 0xf0, 0x36, 0x2f, 0xf9, 0x26, 0xc3, 0xeb,
	0x4a, 0x60, 0x60, 0x53, 0xaf, 0x27, 0x5a, 0xfc, 0x48, 0x5a, 0x78, 0x09, 0xde, 0xb9, 0xc0, 0x54,
	0x62, 0x82, 0xdf, 0x5b, 0x6c, 0x24, 0x7b, 0x0e, 0xe3, 0xb6, 0x41, 0xb1, 0xc9, 0x79, 0x77, 0x66,
	0x47, 0x2d, 0x2f, 0x39, 0x7b, 0x09, 0x36, 0xaa, 0x7c, 0x74, 0x54, 0x77, 0x75, 0xbc, 0xac, 0xb3,
	0x25, 0x05, 0x4e, 0xb4, 0x1e, 0xe6, 0xc0, 0xbe, 0xd4, 0x2a, 0x80, 0x56, 0x1f, 0xeb, 0xf7, 0x02,
	0x26, 0xe4, 0x53, 0x15, 0x93, 0x2a, 0x63, 0x5a, 0xf7, 0xb7, 0xb2, 0x76, 0x6c, 0xf5, 0x09, 0x58,
	0x84, 0x05, 0xfe, 0xff, 0x56, 0xe1, 0x1a, 0xdc, 0x68, 0x9f, 0xf4, 0x03, 0xf7, 0x14, 0xfa, 0xe0,
	0x5d, 0xdc, 0xd6, 0xf2, 0x2e, 0xc1, 0xa6, 0xae, 0xca, 0x06, 0xc3, 0x5f, 0x06, 0x8c, 0xa3, 0x4c,
	0x53, 0x30, 0x05, 0xf3, 0xbe, 0x89, 0x99, 0xf3, 0x61, 0x2a, 0xcc, 0x47, 0xa8, 0xb0, 0x76, 0x50,
	0x31, 0xda, 0x83, 0x0a, 0x7b, 0x4f, 0x2a, 0x9c, 0x01, 0x2a, 0xde, 0xc1, 0x2c, 0x46, 0xd9, 0x0d,
	0x57, 0x87, 0x63, 0x67, 0xe0, 0xd0, 0xd0, 0x9a, 0xc0, 0x98, 0x5b, 0x0b, 0x77, 0xe5, 0xaa, 0x5b,
	0xe9, 0xd2, 0x26, 0x5d, 0x69, 0xf5, 0xdb, 0x84, 0xc9, 0x79, 0xf7, 0x71, 0xb0, 0xb7, 0xe0, 0x6a,
	0xb6, 0xf4, 0x44, 0x4e, 0x94, 0x61, 0x0b, 0xb6, 0x53, 0x92, 0xb6, 0x67, 0x78, 0xc4, 0xd6, 0xe0,
	0xf6, 0x38, 0x62, 0xcf, 0xd4, 0x3b, 0x0f, 0xc1, 0xda, 0xe9, 0xed, 0x81, 0xa1, 0xbd, 0x0f, 0x49,
	0x19, 0xf6, 0xbe, 0x07, 0x2f, 0x46, 0x19, 0xa5, 0x79, 0x71, 0xa7, 0xdd, 0x3e, 0xb9, 0x7b, 0xc7,
	0x7d, 0xaa, 0x84, 0x7f, 0x07, 0x13, 0x1e, 0xb1, 0x0f, 0x30, 0x8d, 0x51, 0x7e, 0x45, 0xfc, 0x76,
	0xb0, 0x75, 0x0d, 0x7e, 0x8c, 0xf2, 0x73, 0x55, 0xca, 0x9b, 0x43, 0xbd, 0x99, 0x43, 0x7f, 0x9f,
	0x37, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x15, 0x15, 0xdc, 0x8f, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalendarClient is the client API for Calendar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalendarClient interface {
	CreateEvent(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	UpdateEvent(ctx context.Context, in *UpdateEventRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	DeleteEvent(ctx context.Context, in *DeleteEventRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	GetDailyEvent(ctx context.Context, in *DateRequest, opts ...grpc.CallOption) (*GetEventResponse, error)
	GetWeeklyEvent(ctx context.Context, in *DateRequest, opts ...grpc.CallOption) (*GetEventResponse, error)
	GetMonthlyEvent(ctx context.Context, in *DateRequest, opts ...grpc.CallOption) (*GetEventResponse, error)
}

type calendarClient struct {
	cc grpc.ClientConnInterface
}

func NewCalendarClient(cc grpc.ClientConnInterface) CalendarClient {
	return &calendarClient{cc}
}

func (c *calendarClient) CreateEvent(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/pb.Calendar/CreateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) UpdateEvent(ctx context.Context, in *UpdateEventRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/pb.Calendar/UpdateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) DeleteEvent(ctx context.Context, in *DeleteEventRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/pb.Calendar/DeleteEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) GetDailyEvent(ctx context.Context, in *DateRequest, opts ...grpc.CallOption) (*GetEventResponse, error) {
	out := new(GetEventResponse)
	err := c.cc.Invoke(ctx, "/pb.Calendar/GetDailyEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) GetWeeklyEvent(ctx context.Context, in *DateRequest, opts ...grpc.CallOption) (*GetEventResponse, error) {
	out := new(GetEventResponse)
	err := c.cc.Invoke(ctx, "/pb.Calendar/GetWeeklyEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) GetMonthlyEvent(ctx context.Context, in *DateRequest, opts ...grpc.CallOption) (*GetEventResponse, error) {
	out := new(GetEventResponse)
	err := c.cc.Invoke(ctx, "/pb.Calendar/GetMonthlyEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalendarServer is the server API for Calendar service.
type CalendarServer interface {
	CreateEvent(context.Context, *CreateRequest) (*EmptyResponse, error)
	UpdateEvent(context.Context, *UpdateEventRequest) (*EmptyResponse, error)
	DeleteEvent(context.Context, *DeleteEventRequest) (*EmptyResponse, error)
	GetDailyEvent(context.Context, *DateRequest) (*GetEventResponse, error)
	GetWeeklyEvent(context.Context, *DateRequest) (*GetEventResponse, error)
	GetMonthlyEvent(context.Context, *DateRequest) (*GetEventResponse, error)
}

// UnimplementedCalendarServer can be embedded to have forward compatible implementations.
type UnimplementedCalendarServer struct {
}

func (*UnimplementedCalendarServer) CreateEvent(ctx context.Context, req *CreateRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEvent not implemented")
}
func (*UnimplementedCalendarServer) UpdateEvent(ctx context.Context, req *UpdateEventRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEvent not implemented")
}
func (*UnimplementedCalendarServer) DeleteEvent(ctx context.Context, req *DeleteEventRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEvent not implemented")
}
func (*UnimplementedCalendarServer) GetDailyEvent(ctx context.Context, req *DateRequest) (*GetEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDailyEvent not implemented")
}
func (*UnimplementedCalendarServer) GetWeeklyEvent(ctx context.Context, req *DateRequest) (*GetEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWeeklyEvent not implemented")
}
func (*UnimplementedCalendarServer) GetMonthlyEvent(ctx context.Context, req *DateRequest) (*GetEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMonthlyEvent not implemented")
}

func RegisterCalendarServer(s *grpc.Server, srv CalendarServer) {
	s.RegisterService(&_Calendar_serviceDesc, srv)
}

func _Calendar_CreateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).CreateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Calendar/CreateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).CreateEvent(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_UpdateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).UpdateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Calendar/UpdateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).UpdateEvent(ctx, req.(*UpdateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_DeleteEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).DeleteEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Calendar/DeleteEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).DeleteEvent(ctx, req.(*DeleteEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_GetDailyEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).GetDailyEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Calendar/GetDailyEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).GetDailyEvent(ctx, req.(*DateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_GetWeeklyEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).GetWeeklyEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Calendar/GetWeeklyEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).GetWeeklyEvent(ctx, req.(*DateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_GetMonthlyEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).GetMonthlyEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Calendar/GetMonthlyEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).GetMonthlyEvent(ctx, req.(*DateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calendar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Calendar",
	HandlerType: (*CalendarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEvent",
			Handler:    _Calendar_CreateEvent_Handler,
		},
		{
			MethodName: "UpdateEvent",
			Handler:    _Calendar_UpdateEvent_Handler,
		},
		{
			MethodName: "DeleteEvent",
			Handler:    _Calendar_DeleteEvent_Handler,
		},
		{
			MethodName: "GetDailyEvent",
			Handler:    _Calendar_GetDailyEvent_Handler,
		},
		{
			MethodName: "GetWeeklyEvent",
			Handler:    _Calendar_GetWeeklyEvent_Handler,
		},
		{
			MethodName: "GetMonthlyEvent",
			Handler:    _Calendar_GetMonthlyEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calendar.proto",
}
